_id: 4fe44900-2968-11ea-a16d-e7b30751e183
_parent: 42-Vim_Notetaking
name: Edwin
reply_to: 57d68750-2949-11ea-a16d-e7b30751e183
body: "Hi! It's good that you ask these questions to help me understand where I could and should be more clear. \r\n\r\n1. Do you mean creating the actual index file or do you ask whether I manually typed everything before the tree in the index file? I did type the rest manually indeed. Apart from the full tree, the idea is to have some sort of a quickstart menu for projects you are currently working on in case you have separate folders for those. For example, you could type the name of a directory to link to all notes relating to your PhD work, or to things related to hobby writing etc. W.r.t. the former, to make a file from within Vim you can just type `:e filename` where 'e' is short for 'edit', and then just save with `:w` where 'w' is short for 'write'. \r\n\r\n2. You are right that that command looks confusing and I would say it's more advanced Vim stuff. I just included it in case someone wants to reproduce the tree. Everything after the ! is part of a Unix/Linux command, so you actually do not want the dot after the exclamation mark. In Vim commands the dot has the special meaning of referring to the current line. So what `:.!tree [etc]` says is: redirect the output of `!tree [etc]` to the current line. \r\nHowever, in hindsight the following command would have been more clear: `:read !tree [etc]` or shorter `:r!tree [etc]`. The read command is more clear about what it does: it reads the output from the command into the current file. The only difference with the more unclear command that I gave is that it pastes the output *after* the current line instead of *on* the line. But they essentially do the same. \r\n\r\n3. I did not automate the creation of the index file so far, so indeed you need to rerun the command manually. To be honest, I haven't bothered doing that anymore. I thought the tree looks really cool, but in practice using a fuzzy finder such as CtrlP is just extremely efficient. The tree could be useful to visualize a complicated folder structure if you have one, but otherwise you could leave it out. The main purpose of the index file was to be a quickstart menu rather than a complete oversight anyways. \r\n\r\nHaving said that, if you do like it (I mean, it looks cool right?) you could automate it. What you usually do is make a bash script. I don't mind making one for you. If you would be interested in that, let me know what's the exact behavior you want :-) \r\n\r\nHope that helps, please feel free to ask further questions!"
date: 1577533858
