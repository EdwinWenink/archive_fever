_id: 5bfea260-5f9d-11ea-a16d-e7b30751e183
_parent: 42-Vim_Notetaking
name: Edwin
reply_to: 3d3129f0-5f86-11ea-a16d-e7b30751e183
body: "Hey, thanks a lot! I'm assuming you are not asking about the big file tree (which I do not use anymore, even though it looked kind of cool), but about the links to some heavily used directories or files (a sort of \"quick start\" menu). There's multiple ways to go about this and in both cases the solution is really simple, luckily! These are two \"manual\" methods:\r\n\r\n1. Just write the name in plain text (so no explicit hyperlinking needed). This works because Vim is smart. So if I have a directory called \"Philosophy\", I can just manually type \"Philosophy\", put my cursor on that word, and open the directory with `gf` or `gF`. Pay attention that your working directory is the root of your notes directory. You can check this with `:pwd` (path working directory) and use `:cd` to change the working directory. \r\n\r\n2. You could make the links explicit using the Markdown format. If you do this correctly, you could for example also navigate your notes on GitHub, so without Vim. Example: `[ Philosophy ]( ./Philosophy )`. You can still use Vim's `gF` on both of these paths. Notice that I left spaces around the path. In my experience this is needed to not confuse Vim into thinking either ] or ) is part of the path. \r\n\r\nFor me managing these links manually is fine. I practically never have to update them. Moreover, because the notesystem does not rely on directory hierarchy but more on searchability with CtrlP or fzf, and custom tags (see the [next post](https://www.edwinwenink.xyz/posts/43-notes_tagging/) ), I do not actually use it. \r\n\r\nBut if you really want to automatically list all directories, you can always pipe the output of `dir` (Windows) or `ls` (UNIX etc.) back into Vim. (This will not be formatted as a markdown link, of course.)\r\n\r\n3. E.g. if you run `.!ls` you automatically get all your (top-level) folders. To get all subdirectories as well, try `.!ls -R`. I never use the `dir` command on Windows, but you hopefully get the general idea. \r\n\r\nHope that helps!"
date: 1583494005
