_id: 9689add0-9d19-11ea-a16d-e7b30751e183
_parent: 48-vim_fast_creating_and_linking_notes
name: nv2lt
reply_to: 2edc7bf0-859e-11ea-a16d-e7b30751e183
body: "This is an excellent post Edwin. Well done!\r\nIn reply to your comment in 24 Apr 2020:\r\n<pre>\r\nThe real answer is a bit more intricate, because I additionally want all Markdown links to work when I export all my files as a website, or preview them on GitHub. With your current solution, the link would look like this if I’m not mistaken “Zettelkasten/somenote.md”. This will work for Vim because your working directory is the ...\r\n</pre>\r\n\r\nIn order to work in Gitlab (I assume that the same applies for Github) I made the following modification to Fernardo's script: `let mdlink = \"[\".filename_wo_timestamp[:-4].\"](./\".filename[:-4].\")\"`\r\nThis removes .md suffix and also adds the ./ in order to make it work for Gitlab wiki pages. By doing this you can have nested folders and all links in Gitlab wiki will work.\r\nThe problem now is that by removing .md suffix the vim's `gf` command no longer works. In order to overcome this I use the plasticboy/vim-markdown plug which allows to use `ge` instead of `gf` to follow markdown link inside vim. It also allows to have link to Headings inside a file like [file](./file_path/filename#Heading1).\r\nIn this scenario you can have the same pattern work both inside vim and in gitlab (probably github also).\r\n\r\nCongrats again!"
date: 1590254381
